#https://swagger.io/docs/specification/basic-structure/

paths:
  /api/cart: 
    get:
      summary: Obtiene todos los carts
      tags:
        - Carts
      description: Devuelve un listado de todos los carts
      responses:
        "200":
          description: Los carts conseguidos de manera exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCarts'
              example:
                uid: "66b531994e8dc5467c6f5e59"
                _id: "66b531994e8dc5467c6f5e59"
                products:
                    - product: "66b531994e8dc5467c6f5e5a"
                      quantity: 4
                createdAt: "2024-08-08T20:59:05.302Z"
                updatedAt: "2024-08-08T20:59:05.302Z"
                __v: 0
        "404":
          description: Not Found:carts no encontrado
        "500":
          description: Error interno del servidor
  /api/cart/{cid}: 
    delete:
      summary: Eliminar todos los productos del cart
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del cart que se desea eliminar todos los productos
          schema:
            type: ObjectId
            example: 669ad0d3e86bb35945c217
      responses:
        "200":
          description: Cart  669ad0d3e86bb35945c217 productos eliminados con exito
        "404":
          description: Cart no encontrado
        "500":
          description: Error en el servidor. No se ha podido vaciado del cart 669ad0d3e86bb35945c217
    get:
      summary: Obtiene el cart segun el id
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del cart que se desea  encontrar
          schema:
            type: ObjectId
            example: 669ad0d3e86bb35945c217
      responses:
        "200":
          description: Los cart conseguidos de manera exitos
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Cart'
              example:
                  uid: "66b531994e8dc5467c6f5e59"
                  _id: "667c8362a7ba944ab303e3e6"
                  products:
                    - product:
                        owner: "admin"
                        _id: "66341e60ae100d582fa75344"
                        title: "HORRORLAND"
                        category: "terror"
                        description: "Una exclusiva noche privada de Halloween en Liseberg se convierte rápidamente en una verdadera pesadilla."
                        price: 4500
                        thumbnail: "https://static.cinemarkhoyts.com.ar/Images/Posters/feaa7b4e69f36adba02e3a4e344795c8.jpg?v=00002323"
                        stock: 32
                        status: true
                        code: 289
                        quantity: 2
                  -createdAt: "2024-08-08T20:59:05.302Z"
                  -updatedAt: "2024-08-08T20:59:05.302Z"
                  -__v: 0
        "404":
          description: Not Found:Cart no encontrado
        "500":
          description: Error interno del servidor
    put:
      summary: Modifica el cart asociado al usuario por uno nuevo
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del cart que se desea Modificar/Reemplazar
          schema:
            type: string
            example: 669ad0d3e86bb35945c217
      requestBody:  
        description: Como crear un nuevo cart
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCart'
      responses:
        "200":
          description: Cart modificado con exito
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCart'
              example:
                  uid: "66b531994e8dc5467c6f5e59"
                  products:
                    - product: null
                      quantity: 4
                      _id: "66b531994e8dc5467c6f5e5a"
                  createdAt: "2024-08-08T20:59:05.302Z"
                  updatedAt: "2024-08-08T20:59:05.302Z"
                  __v: 0              

        "404":
          description: Cart no encontrado
        "500":
          description: Error interno del servidor
  /api/cart/{cid}/product/{pid}:
    put:
      summary: Modificar cantidad de un producto dentro de un cart
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del cart a modificar
          schema: 
            type: string
            example: 6667a0ad3c1a1040f4e4564e
        - in: path
          name: pid
          required: true
          description: ID del producto que se desea modificar
          schema:
            type: string 
            example: 6667a0ad3c1a1040f4e4564e
      requestBody:  
        description: Cómo modificar la cantidad de un producto del cart
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateCartQuantity'
      responses:
        "200":
          description: Los carts conseguidos de manera exitosa
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCart'
              example:
                  uid: "66b531994e8dc5467c6f5e59"
                  products:
                    - product: null
                      quantity: 4
                      _id: "66b531994e8dc5467c6f5e5a"
                  createdAt: "2024-08-08T20:59:05.302Z"
                  updatedAt: "2024-08-08T20:59:05.302Z"
                  __v: 0
        "404":
          description: Cart no encontrado
        "500":
          description: Error interno del servidor
  /api/cart/{uid}:
    post:
      summary: Crear un cart
      tags:
        - Carts
      parameters:
        - in: path
          name: uid
          required: true
          description: ID del usauario que desea crear el cart
          schema:
            type: ObjectId
            example: 6667a0ad3c1a1040f4e4564e
      requestBody:  
        description: Como crear un nuevo cart
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateCart'
                - type: object
                  properties:
                    uid:
                      type: string
                      description: ID del usuario que crea el cart
                      example: "66b531994e8dc5467c6f5e59"
      responses:
        "200":
          description: Cart creado de manera exitos
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCart'
              example:
                  uid: "66b531994e8dc5467c6f5e59"
                  products:
                    - product: null
                      quantity: 4
                      _id: "66b531994e8dc5467c6f5e5a"
                  createdAt: "2024-08-08T20:59:05.302Z"
                  updatedAt: "2024-08-08T20:59:05.302Z"
                  __v: 0
        "404":
          description: Cart no encontrado
        "500":
          description: Error interno del servidor

  api/cart/{cid}/product/{pid}:
    delete:
      summary: Eliminar un producto determinado del cart
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del cart donde se quiere eliminar el producto
          schema:
            type: string
            example: 667c8362a7ba944ab303e3e6
        - in: path
          name: pid
          required: true
          description: ID del producto que se desea eliminar
          schema:
            type: string
            example: 66341e60ae100d582fa75344
      responses:
        "200":
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCart'
              example:
                  uid: "66b531994e8dc5467c6f5e59"
                  products:
                    - product: "66b531994e8dc5467c6f5e59"
                      quantity: 4
                      _id: "66b531994e8dc5467c6f5e5a"
                  createdAt: "2024-08-08T20:59:05.302Z"
                  updatedAt: "2024-08-08T20:59:05.302Z"
                  __v: 0
        "404":
          description: Cart no encontrado
        "500":
          description: Error en el servido. No se ha podido eliminar 66341e60ae100d582fa75344 del cart 667c8362a7ba944ab303e3e6


  

#schema
components:
  schemas:
    GetCarts: 
      properties:
        uid:
          type: string
          example: "66341e60ae100d582fa75344"
        _id:
          type: string
          example: "66b531994e8dc5467c6f5e59"
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                example: "66b531994e8dc5467c6f5e5a"
              quantity:
                type: integer
                example: 4
        
        createdAt:
          type: string
          format: date-time
          example: "2024-08-08T20:59:05.302Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-08-08T20:59:05.302Z"
        __v:
          type: integer
          example: 0
    GetCart: 
      type: object
      properties:
        uid:
          type: string
          example: "66341e60ae100d582fa75344"
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                example: "66b531994e8dc5467c6f5e5a"
              quantity:
                type: integer
                example: 4
        createdAt:
          type: string
          format: date-time
          example: "2024-08-08T20:59:05.302Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-08-08T20:59:05.302Z"
        __v:
          type: integer
          example: 0
    GetCartByID:
      type: object
      properties:
        _id:
          type: string
          example: "66b531994e8dc5467c6f5e59"
        products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/ProductsCart'
              quantity:
                type: integer
                example: 4
        uid:
          type: string
          example: "66341e60ae100d582fa75344"
        createdAt:
          type: string
          format: date-time
          example: "2024-08-08T20:59:05.302Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-08-08T20:59:05.302Z"
        __v:
          type: integer
    ProductsCart:
      type: object
      properties:
        owner:
          type: string
          description: Email del owner
          example: mia@gmail.com
        -id:
          type: string
          description: ID del producto
          example: 66aa4701e5707cc9bb898ac5 
        title:
          type: string
          description: Título del producto
          example: GARFIELD FUERA DE CASA
        category:
          type: string
          description: Categoría del producto
          example: animación
        description:
          type: string
          description: Descripción del producto
          example: Garfield, el famoso gato amante de la lasaña que odia los lunes, está…
        price:
          type: number
          format: float
          description: Precio del producto
          example: 2000
        thumbnail:
          type: string
          description: Imagen del producto
          example: https://static.cinemarkhoyts.com.ar/Images/Posters/2bc9ca70c2febb6faf5…
        stock:
          type: number
          description: Cantidad en stock
          example: 5
        status:
          type: boolean
          description: Disponibilidad del producto
          example: true
        code:
          type: number
          description: codigo de identificacion del producto
          example: 1233
    UpdateCartQuantity:
      type: object
      properties:
        quantity:
            type: number
            description: cantidad de producto
            example: 3
    UpdateCart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                description: Id autogenerado de mongo.
                example: "66341e60ae100d582fa75344"
              quantity:
                type: number
                description: cantidad de producto
                example: 2



